body,
html {
  margin: 0;
  /* Use CSS variables so theme can be toggled */
  background-color: var(--bg);
  /* Use the Lexend Exa variable (from next/font) with sensible fallbacks */
  font-family: var(--font-lexend-exa), system-ui, -apple-system, "Segoe UI",
    Roboto, "Helvetica Neue", Arial, sans-serif;
  font-weight: 400;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* Global tracking (letter-spacing) â€” tweak --tracking in :root to adjust */
  letter-spacing: var(--tracking, 0);
}

/* Score animation styles */
.score-inline {
  display: inline-flex;
  align-items: center;
  position: relative;
}
.score-number {
  font-variant-numeric: tabular-nums;
  transition: color 240ms ease;
  color: var(--price-actual);
}
.score-number.anim {
  /* use the positive/text-success color while animating so it matches final state */
  color: var(--price-positive, #28a745) !important;
}
.score-delta {
  margin-left: 6px;
  color: var(--price-positive, #28a745);
  font-weight: 700;
  position: relative;
  opacity: 0;
  transform: translateY(0);
  transition: transform 600ms ease, opacity 600ms ease;
}
.score-delta.show {
  opacity: 1;
  animation: delta-move 600ms ease forwards;
}
@keyframes delta-move {
  0% {
    opacity: 1;
    transform: translateY(0);
  }
  100% {
    opacity: 0;
    transform: translateY(-18px);
  }
}

/* Confetti styles */
.confetti-container {
  position: absolute;
  left: 50%;
  top: -56px; /* start higher so pieces burst above the score */
  transform: translateX(-50%);
  width: 160px; /* tighter spread centered on the score */
  height: 120px;
  pointer-events: none;
  overflow: visible;
}
.confetti-piece {
  position: absolute;
  top: 0; /* start at top of container */
  width: 8px;
  height: 12px;
  border-radius: 2px;
  opacity: 0;
  transform-origin: center;
  will-change: transform, opacity;
  /* animate upward (negative translateY) and keep final state (fill-mode both) */
  animation: confetti-rise 1000ms cubic-bezier(0.2, 0.8, 0.2, 1) both;
}
@keyframes confetti-rise {
  0% {
    opacity: 1;
    transform: translateY(0) rotate(0deg) scale(1);
  }
  60% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    /* smaller rise so confetti doesn't go too far up */
    transform: translateY(-48px) rotate(420deg) scale(0.9);
  }
}

/* Theme variables: default to light theme. Toggle by setting
   `data-theme="dark"` on the <html> element. */
:root {
  /* Core */
  --bg: #ffffff;
  --text: #0f1720; /* primary text */
  --muted: #6b7280; /* secondary text */
  --card-bg: #f8fafc;
  --accent: #16423c; /* preserved accent color */
  --shadow: rgba(2, 6, 23, 0.08);
  /* Semantic colors used in components */
  --price-chosen: #1976d2;
  --price-actual: #28a745;
  --status: #000000;
  --leaderboard-bg: #f0f0f0;
  /* skeleton */
  --skeleton-1: #e6e6e6;
  --skeleton-2: #f2f2f2;
  --skeleton-3: #e6e6e6;
  --text-light: #e0e0e0; /* use where a lighter text is explicitly desired */
  /* Button tokens */
  --btn-primary: var(--accent);
  --btn-success: var(--price-actual);
  --btn-secondary: var(--muted);
  /* Slider tokens */
  --slider-mark: var(--muted);
  --slider-mark-active: var(--accent);
  --slider-mark-label: var(--muted);
  --slider-track: var(--accent);
  --slider-rail: var(--shadow);
  --slider-thumb: var(--accent);
  /* Global letter-spacing (tracking). Negative values tighten the font when it's too loose. */
  --tracking: -0.1em;
}

[data-theme="dark"] {
  --bg: #08151a; /* dark teal/near-black */
  --text: #e6eef0;
  --muted: #9ca3af;
  --card-bg: #0b1220;
  --accent: #2dd4bf;
  --shadow: rgba(0, 0, 0, 0.5);
  /* keep chosen/actual colors but adapt status/leaderboard to dark background */
  --price-chosen: #1976d2;
  --price-actual: #28a745;
  --status: #e6eef0;
  --leaderboard-bg: var(--card-bg);
  --skeleton-1: #0f1720;
  --skeleton-2: #0b1220;
  --skeleton-3: #0f1720;
  --text-light: #e0e0e0;
  --btn-primary: var(--accent);
  --btn-success: var(--price-actual);
  --btn-secondary: var(--muted);
}

body {
  overflow-y: scroll;
}

/* Basic color utilities using variables */
body {
  color: var(--text);
  background: var(--bg) !important;
}

/* Ensure headings follow the theme color (override library defaults if necessary) */
h1,
h2,
h3,
h4,
h5,
h6 {
  color: var(--text) !important;
  /* I prefer tighter letter-spacing for headings */
  letter-spacing: calc(var(--tracking) * 1.1);
}

.fixed-size {
  aspect-ratio: 19 / 6;
}

.property-carousel {
  width: 960px;
  max-width: 100%;
  height: auto;
}

#root {
  height: 100%;
}

.light-text {
  color: var(--text-light);
}

.fill-black {
  background-color: black !important;
}

.small-text {
  font-size: 0.8rem;
}

.half-width {
  width: 50vw;
  min-height: 100vh;
  box-shadow: 0 4px 20px color-mix(in srgb, var(--card-bg) 40%, black 20%);
}

.MuiSlider-thumb {
  transition: all 1s ease-in-out;
}

/* Material UI Slider overrides to ensure good contrast in both themes */
.MuiSlider-root {
  --_slider-mark: var(--slider-mark);
}
.MuiSlider-root .MuiSlider-mark {
  width: 2px;
  height: 8px;
  border-radius: 1px;
  background-color: var(--slider-mark) !important;
}
.MuiSlider-root .MuiSlider-mark.MuiSlider-markActive {
  background-color: var(--slider-mark-active) !important;
}
.MuiSlider-root .MuiSlider-markLabel {
  color: var(--slider-mark-label) !important;
}
.MuiSlider-root .MuiSlider-rail {
  background-color: var(--slider-rail) !important;
  opacity: 1 !important;
}
.MuiSlider-root .MuiSlider-track {
  background-color: var(--slider-track) !important;
}
.MuiSlider-root .MuiSlider-thumb {
  background-color: var(--slider-thumb) !important;
  color: var(--slider-thumb) !important;
  box-shadow: 0 2px 6px var(--shadow);
  border: 2px solid var(--bg);
}
.MuiSlider-root .MuiSlider-valueLabel {
  color: var(--bg) !important;
  background: var(--text) !important;
  font-family: var(--font-lexend-exa);
}

/* Subtle bounce + settle used by PriceIndicators when shown after a guess */
@keyframes subtle-bounce-settle {
  0% {
    transform: translateY(-10px) scaleY(0.995);
    opacity: 0;
  }
  40% {
    transform: translateY(3px) scaleY(1.01);
    opacity: 1;
  }
  65% {
    transform: translateY(-2px) scaleY(0.998);
  }
  100% {
    transform: translateY(0) scaleY(1);
  }
}

.price-indicator-animate {
  animation: subtle-bounce-settle 520ms cubic-bezier(0.22, 0.9, 0.35, 1) both;
}

.price-indicator-label {
  will-change: transform, opacity;
}

@media (max-width: 992px) {
  .half-width {
    width: 75vw;
  }
}

@media (max-width: 480px) {
  .half-width {
    width: 90vw;
  }
}

/* Map slide down/up animation */
.map-embed-container {
  overflow: hidden;
  max-height: 0;
  transform: translateY(-6px);
  opacity: 0;
  transition: transform 360ms cubic-bezier(0.22, 0.9, 0.35, 1),
    opacity 360ms cubic-bezier(0.22, 0.9, 0.35, 1), max-height 360ms ease;
}

.map-embed-container.map-visible {
  /* Allow up to 400px map height when visible; adjust as needed */
  max-height: 420px;
  transform: translateY(0);
  opacity: 1;
}

.map-embed {
  width: 100%;
  height: 320px;
  border-radius: 6px;
  box-shadow: 0 4px 14px var(--shadow);
}

/* Theme toggle button (lightweight) */
.theme-toggle {
  position: fixed;
  right: 18px;
  top: 18px;
  width: 40px;
  height: 40px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 8px;
  background: transparent;
  border: 1px solid rgba(0, 0, 0, 0.06);
  backdrop-filter: blur(6px);
  cursor: pointer;
  transition: transform 0.15s ease, background 0.15s ease, color 0.15s ease;
  color: var(--text);
}
.theme-toggle:hover {
  transform: translateY(-2px);
}
.theme-toggle:active {
  transform: translateY(0);
}
.theme-toggle svg {
  width: 20px;
  height: 20px;
  display: block;
}

/* Make bootstrap outline buttons and small helpers follow theme variables where used */
.btn-outline-primary {
  color: var(--btn-primary) !important;
  border-color: var(--btn-primary) !important;
}
.btn-outline-primary:hover,
.btn-outline-primary:focus {
  background-color: var(--btn-primary) !important;
  color: var(--bg) !important;
}
.btn-outline-success {
  color: var(--btn-success) !important;
  border-color: var(--btn-success) !important;
}
.btn-outline-success:hover,
.btn-outline-success:focus {
  background-color: var(--btn-success) !important;
  color: var(--bg) !important;
}
.btn-outline-secondary {
  color: var(--btn-secondary) !important;
  border-color: var(--btn-secondary) !important;
}
.btn-text {
  /* ensure inline button text uses inherited tracking unless overridden */
  letter-spacing: inherit;
}

/* Ensure Bootstrap and MUI buttons pick up the global tracking variable.
   Some component libraries inject their own letter-spacing; use a specific
   selector and !important to ensure consistent tracking across buttons. */
.btn,
.btn *,
.MuiButton-root,
.MuiButton-root *,
button,
input[type="button"],
input[type="submit"] {
  letter-spacing: var(--tracking, 0) !important;
  font-family: var(--font-lexend-exa) !important;
}
.text-success {
  color: var(--btn-success) !important;
}
.icon-link svg {
  /* ensure icons pick up button/text color */
  fill: currentColor;
  stroke: currentColor;
}

/* Button text bounce on hover */
@keyframes text-bounce {
  0% {
    transform: translateY(0);
  }
  30% {
    transform: translateY(-4px);
  }
  50% {
    transform: translateY(0);
  }
  70% {
    transform: translateY(-2px);
  }
  100% {
    transform: translateY(0);
  }
}
.btn-text {
  display: inline-block;
  will-change: transform;
}

.MuiButton-root:hover .btn-text {
  animation: text-bounce 1000ms cubic-bezier(0.22, 0.9, 0.35, 1);
}

/* Additional styles can be added here if needed */
